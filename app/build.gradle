apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
apply from: '../api.gradle'
apply from: '../versions.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as Integer
    buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        applicationId "com.havrylyuk.thenounproject"
        minSdkVersion rootProject.ext.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.targetSdkVersion as Integer
        versionCode rootProject.ext.versionCode as Integer
        versionName rootProject.ext.versionName as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            try {
                storeFile file("../keystore/noun_project.jks")
                storePassword KEYSTORE_PASSWORD
                keyAlias "default"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }

    buildTypes {

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "NOUN_PROJECT_BASE_API_URL", "\"$NOUN_PROJECT_BASE_API_URL\""
            buildConfigField "String", "NOUN_PROJECT_BASE_URL", "\"$NOUN_PROJECT_BASE_URL\""
            buildConfigField "String", "NOUN_DEV_API_KEY", "\"$NOUN_DEV_API_KEY\""
            buildConfigField "String", "NOUN_DEV_SECRET_API_KEY", "\"$NOUN_DEV_SECRET_API_KEY\""
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix " Debug"
            buildConfigField "String", "NOUN_PROJECT_BASE_API_URL", "\"$NOUN_PROJECT_BASE_API_URL\""
            buildConfigField "String", "NOUN_PROJECT_BASE_URL", "\"$NOUN_PROJECT_BASE_URL\""
            buildConfigField "String", "NOUN_DEV_API_KEY", "\"$NOUN_DEV_API_KEY\""
            buildConfigField "String", "NOUN_DEV_SECRET_API_KEY", "\"$NOUN_DEV_SECRET_API_KEY\""
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }
}

dependencies {

    def daggerCompiler = "com.google.dagger:dagger-compiler:$daggerVersion"

    // Support
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"

    //Retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofitRxJavaVersion"

    //Jsoup and Signpost
    compile "oauth.signpost:signpost-core:$signpostCoreVersion"
    compile "se.akerfeldt:okhttp-signpost:$okhttpSignpostVersion"
    compile "org.jsoup:jsoup:$jsoupVersion"

    // Timber
    compile "com.jakewharton.timber:timber:$timberVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Butter knife
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // Dagger
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // UI
    compile "uk.co.chrisjenx:calligraphy:$calligraphyVersion"
    compile "com.airbnb.android:lottie:$lottieVersion"

    // RX
    compile "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBindingsVersion"

    // Database
    compile "org.greenrobot:greendao:$greenDaoVersion"

    // Event Bus
    compile "org.greenrobot:eventbus:$eventBusVersion"

    // Date Time
    compile "joda-time:joda-time:$jodaTimeVersion"

    //Fresco
    compile "com.facebook.fresco:fresco:$frescoVersion"

    //Tests
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.robolectric:robolectric:$robolectricVersion"

    //provided 'org.glassfish:javax.annotation:10.0-b28'
}
